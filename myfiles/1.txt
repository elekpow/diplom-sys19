gpg --full-generate-key
gpg --gen-key

gpg --list-keys

sudo gpg --output keyFile --armor --export 041DA354


sudo dpkg-sig --sign builder file1.deb


gpg --delete-secret-key "User Name"
gpg --delete-key "User Name"



--------------------------------------

gpg: key 31A67F635B727EC0 marked as ultimately trusted
gpg: revocation certificate stored as '/home/igor/.gnupg/openpgp-revocs.d/840DE7ACF0408A1CE179836631A67F635B727EC0.rev'
public and secret key created and signed.

pub   rsa3072 2023-10-15 [SC] [expires: 2025-10-14]
      840DE7ACF0408A1CE179836631A67F635B727EC0
uid                      elkrepo <elkkrepo@mail.ru>
sub   rsa3072 2023-10-15 [E] [expires: 2025-10-14]


----------------------------------

gpg --armor --export elkkrepo@mail.ru > key.asc
gpg --armor --output key.txt --export elkkrepo@mail.ru


---------------------------------------------------
aptly repo create myrepo
aptly repo add myrepo <filename>.deb

sudo aptly repo list -raw

aptly publish repo -distribution="stable" -gpg-key="31A67F635B727EC0" myrepo

aptly publish update -gpg-key="31A67F635B727EC0" stable

    
  ##################################

#  
# получить id dashbord # curl http://localhost:5601/api/saved_objects/_find?type=dashboard >> test
# получить id dashbord # grep -o '"id":"[^"]*' ./test
# экспорт dashboard    # curl "localhost:5601/api/kibana/dashboards/export?dashboard=60124a10-6ddf-11ee-bb7d-4d38ac1c8848" > export.json
# импорот dashboard    # curl -X POST -H "Content-Type: application/json" -H "kbn-xsrf: true" -d @export.json http://localhost:5601/api/kibana/dashboards/import  
#    
#    create index

# curl --fail --request POST --header 'Content-Type: application/json' --header 'kbn-xsrf: this_is_required_header' 'http://localhost:5601/api/saved_objects/index-pattern/filebeat-*?overwrite=true' --data '{"attributes":{"title":"filebeat-*","timeFieldName":"@timestamp"}}' 'http://localhost:5601/api/saved_objects/index-pattern/filebeat-*?overwrite=true'





    
 #   https://github.com/stanislavarutyunov/diplom/blob/main/netology-diplom/terraform/main.tf  
 
 # api export-import
 # https://github.com/elastic/kibana/pull/10858
 
 
 # id dashboard  
 #curl http://localhost:5601/api/saved_objects/_find?type=dashboard
 
 
 # https://stackoverflow.com/questions/47017583/how-to-import-export-a-dashboard-in-kibana-using-a-restful-api

# echo "kibanaadmin:`openssl passwd -apr1`" | sudo tee -a /etc/nginx/htpasswd.users
# kibanaadmin 123456
#elasticsearch.hosts: ["http://elastic-elvm:9200"]





------------------------------------
https://losst.pro/nastrojka-obnovleniya-ubuntu-cherez-proksi



----

scp -o ProxyJump=bastion@158.160.127.205 ./elk-elvm.tf.back igor@10.128.0.22:/home/igor




-------------
proxy на бастионе: 3128

sudo apt-get install squid

sudo nano /etc/squid/squid.conf

sudo systemctl stop squid

sudo squid -z

sudo systemctl enable squid --now

 sudo systemctl start squid

sudo apt-get install apache2-utils

sudo htpasswd -c /etc/squid/auth_users user1

sudo squid -k reconfigure

ls  /etc/squid/auth_users

 на сервере
 
sudo nano /etc/apt/apt.conf.d/10proxy 

Acquire::http::proxy "http://user1:123456@bastion-elvm:3128/";
#Acquire::https::proxy "https://username:password@proxy.com:port/";
#Acquire::ftp::proxy "http://username:password@proxy.com:port/";
#Acquire::socks::proxy "socks://username:password@proxy.com:port/";
Acquire::::Proxy "true";


  egress {
    port           = 3128
    protocol = "TCP"
    v4_cidr_blocks= ["10.130.0.254/32"]
  }
    


















