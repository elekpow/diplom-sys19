---
- name: Update
  apt: update_cache='yes'
  environment: "{{ proxy_env }}" 
- name: Delete nginx site default
  file: state='absent' path='/etc/nginx/sites-enabled/default' 
- name: Copy config nginx
  copy: src='nginx.conf.2f' dest='/etc/nginx/nginx.conf'
  environment: "{{ proxy_env }}"   
- name: Copy config
  copy: src='zabbix_agentd.conf.j2' dest='/etc/zabbix/zabbix_agentd.conf'  
  
- name: Install required packages
  become: true
  apt:
    name:
      - python3
      - python3-psycopg2
      - python3-pip
      - libpq-dev
      - gnupg2
      - acl
    state: present 
  environment: '{{ proxy_env }}'  
  
- name: Install packages
  apt: name='postgresql' state='present'
  environment: '{{ proxy_env }}'    

- name: Install zabbix packages
  become: true
  apt:
    name:
      - zabbix-server-pgsql
      - zabbix-frontend-php
      - php7.4-pgsql
      - zabbix-nginx-conf
      - zabbix-sql-scripts
    state: present   
  environment: '{{ proxy_env }}'  

- name: Create postgres user for my app
  become: yes
  become_user: postgres
  postgresql_user:
    name: "zabbix"
    password: "supersecretpassword"

- name: create postgresql db
  postgresql_db:
    name: "zabbix"
    state: present
  become: true
  become_user: postgres 
  
- name: Ensure we have access from the new user
  become: yes
  become_user: postgres
  postgresql_privs:
    db: zabbix
    role: zabbix
    objs: ALL_IN_SCHEMA
    privs: SELECT,INSERT,UPDATE,DELETE  

- name: Initialize the database
  become: true
  shell: |
    zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u zabbix psql zabbix
  args:
    warn: no
  register: hello      
  
- name: DBPassword change
  become: true
  lineinfile: dest=/etc/zabbix/zabbix_server.conf
              regexp='^# DBPassword='
              insertbefore=BOF
              line='DBPassword=supersecretpassword' 
   
- name: Copy config zabbix
  copy: src='zabbix.conf.php' dest='/etc/zabbix/web/zabbix.conf.php'
  environment: "{{ proxy_env }}"     

- name: Restart agent
  service: name='zabbix-agent' state='restarted'
  
- name: zabbix-agent enabled
  service: name='zabbix-agent' enabled='yes'     
  
  
- name: Restart service nginx
  become: true 
  service: name='nginx' state='restarted'   

- name: Enable service nginx
  become: true 
  service: name='nginx' enabled='yes'
    

- name: Restart zabbix-server
  become: true 
  service: name='zabbix-server' state='restarted'      
    
- name: Enable service zabbix-server
  become: true 
  service: name='zabbix-server' enabled='yes'
  
- name: verify is up
  uri:
    url: http://localhost/zabbix.php
  vars:
    http_headers:
      Host: http://localhost:80
  register: _result 
  until: _result.status == 200  
- include: "{{ 'addhost.yml' if _result.status else '' }}" 
